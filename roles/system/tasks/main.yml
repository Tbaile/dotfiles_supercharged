- name: Root operations
  block:
    - name: Install prerequisite packages
      community.general.pacman:
        name:
          - git
          - sudo
      when: ansible_pkg_mgr == "pacman"

    - name: Set Hostname
      ansible.builtin.hostname:
        name: "{{ hostname }}"
      when: hostname is defined

    - name: Set time zone
      community.general.timezone:
        name: "{{ timezone }}"
      notify:
        - "sync time"

    - name: Set vconsole keymap
      ansible.builtin.lineinfile:
        path: /etc/vconsole.conf
        line: "KEYMAP={{ keymap }}"
        create: true
        mode: 0644
      when: keymap is defined

    - name: Ensure locale is present
      community.general.locale_gen:
        name: "{{ item }}"
      loop:
        - en_US.UTF-8
        - it_IT.UTF-8

    - name: Set locale.conf
      ansible.builtin.copy:
        src: etc/locale.conf
        dest: /etc/locale.conf
        mode: 0644

    - name: Set Machine Info
      community.general.ini_file:
        path: /etc/machine-info
        section: null
        option: PRETTY_HOSTNAME
        value: "{{ pretty_hostname }}"
        mode: 0644
        no_extra_spaces: true
      when: pretty_hostname is defined

    - name: Increase number of login tries to 10
      ansible.builtin.lineinfile:
        path: /etc/security/faillock.conf
        line: "deny = 10"

    - name: Add wheel Group
      ansible.builtin.group:
        name: wheel

    - name: Wheel group can use sudo
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/wheel-sudo
        line: "%wheel ALL=(ALL:ALL) ALL"
        create: true
        mode: 0600
        validate: "visudo -cf %s"

    - name: Add personal user
      ansible.builtin.user:
        name: "{{ user.name }}"
        comment: "{{ user.comment }}"
        password: "{{ user.password | password_hash('sha512') }}"
        update_password: on_create
        append: true
        groups:
          - wheel

    - name: Pacman Specific Setup
      when: ansible_pkg_mgr == "pacman"
      block:
        - name: Create aur helper
          ansible.builtin.user:
            name: "{{ aur_helper }}"
            comment: Ansible AUR Helper
            system: true

        - name: Allow aur helper to run passwordless pacman
          ansible.builtin.lineinfile:
            path: /etc/sudoers.d/aur_helper-allow-to-sudo-pacman
            line: "{{ aur_helper }} ALL=(ALL) NOPASSWD: /usr/bin/pacman"
            create: true
            mode: 0600
            validate: "visudo -cf %s"

        - name: Install base devel
          community.general.pacman:
            name:
              - base-devel

        - name: Install AUR package manager
          kewlfft.aur.aur:
            name: yay-bin
          become: true
          become_user: "{{ aur_helper }}"

    - name: Arch Specific Setup
      when: ansible_os_family == "Archlinux"
      block:
        - name: Install system helper packages
          community.general.pacman:
            name:
              - pacman-contrib
              - util-linux
              - reflector

        - name: Copy reflector config
          ansible.builtin.copy:
            src: etc/xdg/reflector/reflector.conf
            dest: /etc/xdg/reflector/reflector.conf
            mode: 0600

        - name: Enable reflector timer
          ansible.builtin.service:
            name: reflector.timer
            enabled: true
            state: started

        - name: Enable paccache timer
          ansible.builtin.systemd:
            name: paccache.timer
            enabled: true
            state: started

        - name: Enable fstrim timer
          ansible.builtin.systemd:
            name: fstrim.timer
            enabled: true
            state: started
